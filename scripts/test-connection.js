const { MongoClient } = require('mongodb');

    const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://dodao:AR3allyL0ngPa5sW0rd@xui.hs.vc/countinglove?authSource=tsa';
const MONGODB_DB = process.env.MONGODB_DB || 'countinglove';

async function testConnection() {
  const client = new MongoClient(MONGODB_URI);
  
  try {
    console.log('üîÑ ƒêang k·∫øt n·ªëi ƒë·∫øn MongoDB...');
    console.log('üìç URI:', MONGODB_URI.replace(/\/\/.*@/, '//***:***@')); // Hide credentials
    
    await client.connect();
    console.log('‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng!');
    
    const db = client.db(MONGODB_DB);
    console.log('üìä Database:', MONGODB_DB);
    
    // Test ping
    await db.admin().ping();
    console.log('üèì Ping database th√†nh c√¥ng!');
    
    // List collections
    const collections = await db.listCollections().toArray();
    console.log('üìÅ Collections hi·ªán c√≥:', collections.length);
    
    if (collections.length > 0) {
      console.log('   -', collections.map(c => c.name).join(', '));
    } else {
      console.log('   - Ch∆∞a c√≥ collections n√†o');
    }
    
    // Test write operation
    const testCollection = db.collection('test_connection');
    const testDoc = { 
      test: true, 
      timestamp: new Date(),
      message: 'Test connection successful'
    };
    
    const result = await testCollection.insertOne(testDoc);
    console.log('‚úçÔ∏è Test write operation th√†nh c√¥ng!');
    console.log('   - Document ID:', result.insertedId);
    
    // Clean up test document
    await testCollection.deleteOne({ _id: result.insertedId });
    console.log('üßπ ƒê√£ x√≥a test document');
    
    console.log('\nüéâ Database connection test ho√†n th√†nh!');
    console.log('üí° B·∫°n c√≥ th·ªÉ ch·∫°y "npm run init-db" ƒë·ªÉ kh·ªüi t·∫°o database');
    
  } catch (error) {
    console.error('‚ùå L·ªói k·∫øt n·ªëi MongoDB:');
    console.error('   -', error.message);
    
    if (error.message.includes('authentication')) {
      console.error('\nüí° Ki·ªÉm tra l·∫°i:');
      console.error('   - Username v√† password');
      console.error('   - Database name v√† authSource');
    } else if (error.message.includes('network')) {
      console.error('\nüí° Ki·ªÉm tra l·∫°i:');
      console.error('   - Host v√† port');
      console.error('   - Network connection');
    }
    
    process.exit(1);
  } finally {
    await client.close();
    console.log('üîå ƒê√£ ƒë√≥ng k·∫øt n·ªëi');
  }
}

// Run test
if (require.main === module) {
  testConnection()
    .then(() => {
      console.log('\n‚úÖ Test ho√†n th√†nh th√†nh c√¥ng!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\n‚ùå Test th·∫•t b·∫°i:', error.message);
      process.exit(1);
    });
}

module.exports = { testConnection };